{"version":3,"sources":["webpack:///./src/app/theme/pages/components/user/adduser/addUser.component.html","webpack:///./src/app/theme/pages/components/user/adduser/addUser.component.ts","webpack:///./src/app/theme/pages/components/user/adduser/addUser.module.ts"],"names":[],"mappings":"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","file":"pages-components-user-adduser-addUser-module.js","sourcesContent":["module.exports = \"<!-- BEGIN: Subheader -->\\r\\n<div class=\\\"m-subheader\\\" appunwraptag=\\\"\\\">\\r\\n    <div class=\\\"d-flex align-items-center\\\">\\r\\n        <div class=\\\"mr-auto\\\">\\r\\n            <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                {{ title }} User\\r\\n            </h3>\\r\\n            <ul class=\\\"m-subheader__breadcrumbs m-nav m-nav--inline\\\">\\r\\n                <li class=\\\"m-nav__item m-nav__item--home\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"m-nav__link m-nav__link--icon\\\">\\r\\n                        <i class=\\\"m-nav__link-icon la la-home\\\"></i>\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li class=\\\"m-nav__separator\\\">\\r\\n                    -\\r\\n                </li>\\r\\n                <li class=\\\"m-nav__item\\\">\\r\\n                    <span class=\\\"m-nav__link-text\\\">\\r\\n                        {{ title }} User\\r\\n                    </span>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- END: Subheader -->\\r\\n<div class=\\\"m-content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <!--begin::Portlet-->\\r\\n            <div class=\\\"m-portlet\\\">\\r\\n                <!--begin::Form-->\\r\\n                <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"save()\\\" class=\\\"m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed\\\" id=\\\"m_form_1\\\">\\r\\n                    <div class=\\\"m-portlet__body\\\">\\r\\n                        <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\r\\n                        <div class=\\\"form-group m-form__group row\\\">\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <label>\\r\\n                                    FullName\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter FullName\\\" formControlName=\\\"fullName\\\">\\r\\n                               \\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <label class=\\\"\\\">\\r\\n                                    Password\\r\\n                                </label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\">\\r\\n                               \\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group m-form__group row\\\">\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <label>\\r\\n                                    Email\\r\\n                                </label>\\r\\n                                <input type=\\\"email\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter Email\\\" formControlName=\\\"email\\\">\\r\\n                              \\r\\n                            </div>\\r\\n                            <!--<div class=\\\"col-lg-6\\\">\\r\\n                                <label class=\\\"\\\">\\r\\n                                    Employee\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control m-input\\\" placeholder=\\\"Enter Employee\\\" formControlName=\\\"employeeid\\\">\\r\\n                                <span class=\\\"m-form__help\\\">\\r\\n                                    Please enter Employee\\r\\n                                </span>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"m-portlet__foot m-portlet__no-border m-portlet__foot--fit\\\">\\r\\n                        <div class=\\\"m-form__actions m-form__actions--solid\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-lg-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" class=\\\"btn m-btn--square btn-primary btn-sm\\\">\\r\\n                                        {{title}} User\\r\\n                                    </button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn m-btn--square btn-secondary btn-sm\\\">\\r\\n                                        Cancel\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <!--end::Form-->\\r\\n            </div>\\r\\n            <!--end::Portlet-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","ï»¿import { Component, OnInit, ViewEncapsulation, AfterViewInit, Inject } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { FetchUserComponent } from '../fetchuser/fetchUser.component';\r\nimport { Helpers } from '../../../../../helpers';\r\nimport { ScriptLoaderService } from '../../../../../_services/script-loader.service';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { User } from '../../../models/index';\r\n\r\n@Component({\r\n    selector: 'addUser',\r\n    templateUrl: './addUser.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AddUserComponent implements OnInit, AfterViewInit {\r\n    userForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    user: User;\r\n\r\n    constructor(\r\n        private _script: ScriptLoaderService,\r\n        private _avRoute: ActivatedRoute,\r\n        private _router: Router,\r\n        private _userService: UserService,\r\n        private _fb: FormBuilder) {\r\n\r\n        if (this._avRoute.snapshot.params[\"id\"]) {\r\n            this.id = this._avRoute.snapshot.params[\"id\"];\r\n        }\r\n    }\r\n\r\n    GetUserByID(userid: number) {\r\n        this._userService.getUserById(userid)\r\n            .subscribe(user => {\r\n                console.log(\"GetUserByID\", user);\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    getUsers() {\r\n        this._userService.getUsers()\r\n            .subscribe(data => {\r\n                console.log(\"GetAllUser\", data);\r\n            })\r\n    }\r\n    ngOnInit() {\r\n       \r\n        this.initializeForm();\r\n        if (this.id > 0) {\r\n            this.title = \"Edit\";\r\n            this._userService.getUserById(this.id).subscribe(result => {\r\n                console.log(result);\r\n                this.user = result;\r\n                \r\n                this.userForm.setValue({\r\n                    id: this.user.id,\r\n                    fullName: this.user.fullName,\r\n                    password: '',\r\n                    email: this.user.email\r\n                });\r\n            });\r\n        }\r\n\r\n        /*\r\n        this.GetUserByID(this.id);\r\n\r\n        this.getUsers();\r\n\r\n        if (this.id > 0) {\r\n            this.title = \"Edit\";\r\n            this.initializeForm();\r\n        } else {\r\n            this.initializeForm();\r\n        }\r\n        */\r\n\r\n        //if (this.id > 0) {\r\n        //    this.title = \"Edit\";\r\n        //}\r\n        //this.initializeForm();\r\n    }\r\n\r\n    //GetUserByID(userid: number) {\r\n    //    this._userService.getUserById(userid)\r\n    //        .subscribe((data) => {\r\n    //            console.log(\"DATA\", data);\r\n    //            this.user = data;\r\n    //            this.title = \"Edit\";\r\n\r\n    //        }\r\n    //        , error => console.log(error));\r\n    //}\r\n\r\n    ngAfterViewInit() {\r\n        this._script.loadScripts('addUser',\r\n            ['assets/demo/default/custom/components/forms/validation/form-controls.js']);\r\n\r\n    }\r\n\r\n    save() {\r\n        //if (!this.employeeForm.valid) {\r\n        //    return;\r\n        //}\r\n       \r\n        if (this.title == \"Create\") {\r\n           \r\n            this._userService.saveUser(this.userForm.value)\r\n                .subscribe((data) => {\r\n                    this.userForm.reset();\r\n                    this._router.navigate(['user/fetch-user']);\r\n                }, error => console.log(error))\r\n        }\r\n        else if (this.title == \"Edit\") {\r\n          \r\n            this._userService.saveUser(this.userForm.value)\r\n                .subscribe((data) => {\r\n                    this.userForm.reset();\r\n                    this._router.navigate(['user/fetch-user']);\r\n                }, error => console.log(error))\r\n        }\r\n    }\r\n    cancel() {\r\n        this._router.navigate(['/fetch-user']);\r\n    }\r\n\r\n    private initializeForm() {\r\n       \r\n        this.userForm = this._fb.group({\r\n            id: [0],\r\n            fullName: ['', [Validators.required]],\r\n            password: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            \r\n        });\r\n\r\n        //if (this.title == \"Edit\") {\r\n        //    this.userForm = this._fb.group({\r\n        //        userName: [this.user.userName, [Validators.required]],\r\n        //        password: ['', [Validators.required]],\r\n        //        email: [this.user.email, [Validators.required]],\r\n        //        employeeid: [this.user.employeeId, [Validators.required]]\r\n        //    })\r\n        //}\r\n        //else if (this.title == \"Create\") {\r\n        //    this.userForm = this._fb.group({\r\n        //        userName: ['Amanda Clarke', [Validators.required]],\r\n        //        password: ['123456', [Validators.required]],\r\n        //        email: ['amanda@gmail.com', [Validators.required]],\r\n        //        employeeid: ['FBI', [Validators.required]]\r\n        //    })\r\n        //}\r\n    }\r\n    //get name() { return this.employeeForm.get('name'); }\r\n    //get gender() { return this.employeeForm.get('gender'); }\r\n    //get department() { return this.employeeForm.get('department'); }\r\n    //get city() { return this.employeeForm.get('city'); }\r\n}","ï»¿import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddUserComponent } from './addUser.component';\r\nimport { LayoutModule } from '../../../../layouts/layout.module';\r\nimport { DefaultComponent } from '../../../default/default.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        \"path\": \"\",\r\n        \"component\": DefaultComponent,\r\n        \"children\": [\r\n            {\r\n                \"path\": \"\",\r\n                \"component\": AddUserComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RouterModule.forChild(routes), LayoutModule, FormsModule, HttpModule, ReactiveFormsModule\r\n    ], exports: [\r\n        RouterModule\r\n    ], declarations: [\r\n        AddUserComponent\r\n    ], providers: [UserService]\r\n})\r\nexport class AddUserModule {\r\n\r\n\r\n\r\n}"],"sourceRoot":""}